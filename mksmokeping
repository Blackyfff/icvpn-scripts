#!/usr/bin/env python

from textwrap import dedent
from optparse import OptionParser
from socket import AF_INET, AF_INET6, inet_pton
from formatter import Formatter
from filereader import get_communities_data


class SmokePingFormatter(Formatter):
    "Formatter for SmokePing (http://oss.oetiker.ch/smokeping/)"
    def add_data(self, name, ip, probe):
        self.config.append(dedent("""
            ++ %(name)s
            menu = %(name)s
            title = %(name)s
            probe = %(probe)s
            host = %(ip)s
            #alerts = someloss

            """ % {"name": name, "ip": ip, "probe": probe}))

    def add_section(self, name):
        self.config.append(dedent("""
            + %(name)s
            menu = %(name)s
            title = %(name)s

            """ % {"name": name}))


def create_config(srcdir, exclude, fmtclass):
    """
    Generates a configuration using all files in srcdir
    (non-recursively) excluding communities from 'exclude'.

    The files are read in lexicographic order to produce deterministic
    results.
    """
    formatter = fmtclass()

    for community, data in get_communities_data(srcdir, exclude):
        try:
            bgp = data["bgp"]
        except (TypeError, KeyError):
            continue

        formatter.add_section(community)

        for host in sorted(bgp.keys()):
            d = bgp[host]
            if 'ipv4' in d:
                peer = d['ipv4']
                formatter.add_data("ipv4-{}".format(host), peer, 'FPing')
            if 'ipv6' in d:
                peer = d['ipv6']
                formatter.add_data("ipv6-{}".format(host), peer, 'FPing6')

    print(formatter.finalize())

if __name__ == "__main__":
    formatters = {
        "SmokePing": SmokePingFormatter,
    }

    parser = OptionParser()
    parser.add_option("-f", "--format", dest="fmt",
                      help="""Create config in format FMT.
                              Possible values: %s. Default: SmokePing""" %
                           ", ".join(formatters.keys()),
                      metavar="FMT",
                      choices=list(formatters.keys()),
                      default="SmokePing")
    parser.add_option("-s", "--sourcedir", dest="src",
                      help="""Use files in DIR as input files.
                              Default: ../icvpn-meta/""",
                      metavar="DIR",
                      default="../icvpn-meta/")
    parser.add_option("-x", "--exclude", dest="exclude", action="append",
                      help="Exclude the comma-separated list of COMMUNITIES",
                      metavar="COMMUNITIES",
                      default=[])

    (options, args) = parser.parse_args()

    create_config(options.src, set(options.exclude), formatters[options.fmt])
